# Generated by Django 5.2.7 on 2025-10-05 04:09

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(help_text="Phone number in format: '+999999999'", max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('specialization', models.CharField(choices=[('CARDIOLOGY', 'Cardiology'), ('DERMATOLOGY', 'Dermatology'), ('ENDOCRINOLOGY', 'Endocrinology'), ('GASTROENTEROLOGY', 'Gastroenterology'), ('GENERAL_PRACTICE', 'General Practice'), ('GYNECOLOGY', 'Gynecology'), ('NEUROLOGY', 'Neurology'), ('ONCOLOGY', 'Oncology'), ('OPHTHALMOLOGY', 'Ophthalmology'), ('ORTHOPEDICS', 'Orthopedics'), ('PEDIATRICS', 'Pediatrics'), ('PSYCHIATRY', 'Psychiatry'), ('RADIOLOGY', 'Radiology'), ('SURGERY', 'Surgery'), ('UROLOGY', 'Urology'), ('OTHER', 'Other')], max_length=50)),
                ('qualification', models.CharField(help_text='e.g., MBBS, MD, MS, etc.', max_length=200)),
                ('license_number', models.CharField(help_text='Medical license/registration number', max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='License number must be 5-20 characters long and contain only uppercase letters and numbers.', regex='^[A-Z0-9]{5,20}$')])),
                ('experience_years', models.PositiveIntegerField(help_text='Years of experience', validators=[django.core.validators.MaxValueValidator(60)])),
                ('clinic_name', models.CharField(blank=True, help_text='Name of the clinic/hospital', max_length=200, null=True)),
                ('clinic_address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(default='India', max_length=100)),
                ('consultation_fee', models.DecimalField(decimal_places=2, help_text='Consultation fee in local currency', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('available_days', models.CharField(help_text='e.g., Monday to Friday, Weekdays, etc.', max_length=200)),
                ('available_time', models.CharField(help_text='e.g., 9:00 AM - 5:00 PM', max_length=100)),
                ('bio', models.TextField(blank=True, help_text='Brief biography or professional summary', null=True)),
                ('languages_spoken', models.CharField(default='English', help_text='Comma-separated list of languages', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_available', models.BooleanField(default=True, help_text='Currently accepting new patients')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctors', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctors',
                'db_table': 'doctors',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['specialization', 'is_active'], name='doctors_special_9572b4_idx'), models.Index(fields=['city', 'specialization'], name='doctors_city_0f8717_idx'), models.Index(fields=['email'], name='doctors_email_ac323b_idx'), models.Index(fields=['license_number'], name='doctors_license_1ed880_idx')],
            },
        ),
    ]
